{"version":3,"sources":["assets/logo.jpg","components/Home.js","components/About.js","components/Contact.js","components/Error.js","components/Navigation.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","Form","FormGroup","Label","for","Input","type","name","id","placeholder","check","label","About","Contact","Error","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","Navbar","color","dark","expand","NavbarBrand","href","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","React","Component","Footer","_Component","apply","arguments","inherits","createClass","key","value","App","react_router_dom","Navigation_Navigation","react_router","path","exact","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48220d1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.52b14cf9.jpg\";","import React from 'react'\n// import React, { Component } from 'react'\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nconst Home = () => {\n  return (\n    <div className=\"main\">\n      <h1>Home</h1>\n      <h3>Questions</h3>\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum ipsa dignissimos voluptas quibusdam esse delectus suscipit? Architecto optio similique expedita repellat nihil. Veritatis facilis non deleniti mollitia quam quo voluptatem.</p>\n      <Form>\n        <FormGroup>\n          <Label for=\"exampleEmail\">Contact Us</Label>\n          <p className=\"exampleEmail\">\n            Let us know what questions you might have. We will be happy to help you with whatever you need. Give your name and phonenumber and tell us which property you might be interested in. We will get back to you as soon as possible.\n          </p>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input\n            type=\"name\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"with a placeholder\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleEmail\">Email</Label>\n          <Input\n            type=\"Email\"\n            name=\"Email\"\n            id=\"exampleEmail\"\n            placeholder=\"Email placeholder\"\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleNumber\">Phone Number</Label>\n          <Input\n            type=\"number\"\n            name=\"number\"\n            id=\"exampleNumber\"\n            placeholder=\"Phone Number placeholder\"\n          />\n        </FormGroup>\n        <FormGroup check className=\"checkboxGroup\">\n          <Label check className=\"checkbox\">\n            <Input className=\"checkbox\" type=\"checkbox\" id=\"EmmaStreet\" label=\"Emma Street\" />\n            <Input className=\"checkbox\" type=\"checkbox\" id=\"LithiaPark\" /> Lithia Park\n            <Input className=\"checkbox\" type=\"checkbox\" id=\"LehiSouth\" /> Lehi South\n            <Input className=\"checkbox\" type=\"checkbox\" id=\"CottonwoodHeights\" /> Cottonwood Heights\n            <Input className=\"checkbox\" type=\"checkbox\" id=\"AmericanFork\" /> American Fork\n          </Label>\n        </FormGroup>\n        <FormGroup className=\"question\">\n          <Label for=\"exampleText\">Mark your question here</Label>\n          <Input type=\"textarea\" className=\"question\" name=\"text\" id=\"exampleText\" placeholder=\"It can be as ridiculous as you want\" />\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nexport default Home","import React, { Component } from 'react'\n\nconst About = () => {\n  return (\n    <div className=\"main\">\n      <p>About</p>\n      <div className=\"kafka\">\n        <p>\n          One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin.\n        </p>\n        <p>\n          He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections. The bedding was hardly able to cover it and seemed ready to slide off any moment.\n        </p>\n        <p>\n          His many legs, pitifully thin compared with the size of the rest of him, waved about helplessly as he looked. \"What's happened to me? \" he thought. It wasn't a dream.\n        </p>\n        <p>\n          His room, a proper human room although a little too small, lay peacefully between its four familiar walls.\n        </p>\n        <p>\n          A collection of textile samples lay spread out on the table - Samsa was a travelling salesman - and above it there hung a picture that he had recently cut out of an illustrated magazine and housed in a nice, gilded frame.\n        </p>\n        <p>\n          It showed a lady fitted out with a fur hat and fur boa who sat upright, raising a heavy fur muff that covered the whole of her lower arm towards the viewer. Gregor then turned to look out the window at the dull weather. Drops of rain could be heard hitting the pane, which made him feel quite sad.\n        </p>\n        <p>\n          \"How about if I sleep a little bit longer and forget all this nonsense\", he thought, but that was something he was unable to do because he was used to sleeping on his right, and in his present state couldn't get into that position. However hard he threw himself onto his right, he always rolled back to where he was. He must have tried it a hundred times, shut his eyes so that he wouldn't have to look at the floundering legs, and only stopped when he began to feel a mild, dull pain there that he had never felt before.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About","import React, { Component } from 'react'\n\nconst Contact = () => {\n  return (\n    <div className=\"main\">\n      <p>\n        Contact\n      </p>\n      <h1>\n        Salty Rogue Real Estate\n      </h1>\n    </div>\n  );\n}\n\nexport default Contact","import React, { Component } from 'react'\n\nconst Error = () => {\n  return (\n    <div className=\"main\">\n      <p>Error: path not found</p>\n    </div>\n  );\n}\n\nexport default Error","import React, { Component } from 'react';\nimport '../App.css';\nimport logo from '../assets/logo.jpg'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n\n  export default class Navigation extends React.Component {    constructor(props){\n      super(props);\n      this.toggle = this.toggle.bind(this);\n      this.state = {\n        isOpen: false\n      };\n    };\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">\n            <img src={logo} alt=\"Salty Rogue Real Estate\" style={{width: 75}} />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/\">Home</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">About</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/contact\">Contact</NavLink>\n              </NavItem>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Properties\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem>\n                    Emma Street\n                  </DropdownItem>\n                  <DropdownItem>\n                    Lehi Properties\n                  </DropdownItem>\n                  {/* <DropdownItem divider />\n                  <DropdownItem>\n                    Reset\n                  </DropdownItem> */}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        \n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Error from './components/Error';\nimport Navigation from './components/Navigation';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Navigation />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/About' component={About} />\n          <Route path='/Contact' component={Contact} />\n          <Route component={Error} />\n        </Switch>\n        <Footer />\n      </div>\n    </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}